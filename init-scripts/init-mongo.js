// init-mongo.js - Script kh·ªüi t·∫°o MongoDB
// T·∫°o database v√† user cho ·ª©ng d·ª•ng

// Chuy·ªÉn sang database myapp
db = db.getSiblingDB('myapp');

// T·∫°o user cho ·ª©ng d·ª•ng
db.createUser({
  user: "appuser",
  pwd: "app-password",
  roles: [
    {
      role: "readWrite",
      db: "myapp"
    }
  ]
});

// T·∫°o c√°c collection (table) v·ªõi validation
db.createCollection("users", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["username", "email", "createdAt"],
      properties: {
        username: {
          bsonType: "string",
          description: "Username l√† b·∫Øt bu·ªôc v√† ph·∫£i l√† string"
        },
        email: {
          bsonType: "string",
          pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$",
          description: "Email ph·∫£i ƒë√∫ng ƒë·ªãnh d·∫°ng"
        },
        fullName: {
          bsonType: "string",
          description: "H·ªç t√™n ƒë·∫ßy ƒë·ªß"
        },
        createdAt: {
          bsonType: "date",
          description: "Ng√†y t·∫°o l√† b·∫Øt bu·ªôc"
        },
        updatedAt: {
          bsonType: "date",
          description: "Ng√†y c·∫≠p nh·∫≠t"
        }
      }
    }
  }
});

// T·∫°o collection products
db.createCollection("products", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["name", "price", "category", "createdAt"],
      properties: {
        name: {
          bsonType: "string",
          description: "T√™n s·∫£n ph·∫©m l√† b·∫Øt bu·ªôc"
        },
        price: {
          bsonType: "number",
          minimum: 0,
          description: "Gi√° ph·∫£i l√† s·ªë d∆∞∆°ng"
        },
        category: {
          bsonType: "string",
          description: "Danh m·ª•c s·∫£n ph·∫©m"
        },
        description: {
          bsonType: "string",
          description: "M√¥ t·∫£ s·∫£n ph·∫©m"
        },
        stock: {
          bsonType: "int",
          minimum: 0,
          description: "S·ªë l∆∞·ª£ng t·ªìn kho"
        },
        createdAt: {
          bsonType: "date",
          description: "Ng√†y t·∫°o"
        }
      }
    }
  }
});

// T·∫°o collection orders
db.createCollection("orders", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["userId", "products", "totalAmount", "status", "createdAt"],
      properties: {
        userId: {
          bsonType: "objectId",
          description: "ID ng∆∞·ªùi d√πng"
        },
        products: {
          bsonType: "array",
          items: {
            bsonType: "object",
            required: ["productId", "quantity", "price"],
            properties: {
              productId: { bsonType: "objectId" },
              quantity: { bsonType: "int", minimum: 1 },
              price: { bsonType: "number", minimum: 0 }
            }
          }
        },
        totalAmount: {
          bsonType: "number",
          minimum: 0
        },
        status: {
          bsonType: "string",
          enum: ["pending", "confirmed", "shipped", "delivered", "cancelled"]
        },
        createdAt: {
          bsonType: "date"
        }
      }
    }
  }
});

// T·∫°o c√°c index ƒë·ªÉ t·ªëi ∆∞u performance
db.users.createIndex({ "username": 1 }, { unique: true });
db.users.createIndex({ "email": 1 }, { unique: true });
db.products.createIndex({ "name": 1 });
db.products.createIndex({ "category": 1 });
db.orders.createIndex({ "userId": 1 });
db.orders.createIndex({ "createdAt": -1 });

// Insert d·ªØ li·ªáu m·∫´u
db.users.insertMany([
  {
    username: "john_doe",
    email: "john@example.com",
    fullName: "John Doe",
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    username: "jane_smith", 
    email: "jane@example.com",
    fullName: "Jane Smith",
    createdAt: new Date(),
    updatedAt: new Date()
  }
]);

db.products.insertMany([
  {
    name: "Laptop Gaming",
    price: 25000000,
    category: "Electronics",
    description: "Laptop gaming cao c·∫•p",
    stock: 10,
    createdAt: new Date()
  },
  {
    name: "√Åo thun nam",
    price: 199000,
    category: "Fashion",
    description: "√Åo thun cotton 100%",
    stock: 50,
    createdAt: new Date()
  }
]);

print("‚úÖ Database myapp ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng!");
print("üìä ƒê√£ t·∫°o c√°c collection: users, products, orders");
print("üë§ ƒê√£ t·∫°o user: appuser");
print("üîç ƒê√£ t·∫°o c√°c index c·∫ßn thi·∫øt");
print("üìù ƒê√£ th√™m d·ªØ li·ªáu m·∫´u");